//for (int* i = buf.begin(); i != buf.end(); i++)//for (const int* i = buf.begin(); i != buf.end(); i++)//for (auto e : buf) {}#include "int_buffer.h"#include "int_sorted.h"#include <iostream>#include <algorithm>#include <ctime>void f(int_buffer buf);void buffer(int_buffer buf);void sorted(int_sorted buf);void winsert();int main(){	winsert();	return 0;}void f(int_buffer buf) {		int j = 1;	for (int* i = buf.begin(); i != buf.end(); i++, j++)	{		*i = j;	}	for (const int* i = buf.begin(); i != buf.end(); i++)	{		std::cout << *i << std::endl;	}}void buffer(int_buffer buf){	for (const int* i = buf.begin(); i != buf.end(); i++)	{		std::cout << *i << std::endl;	}}void sorted(int_sorted buf){	for (const int* i = buf.begin(); i != buf.end(); i++)	{		std::cout << *i << std::endl;	}}void winsert(){	int_sorted test(nullptr, 0);	for (int i = 0; i < 200; i++)	{		test.insert(rand() % 500);	}	sorted(test);}